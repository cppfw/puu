//
//    Copyright (c) 2012 Ivan Gagis
//


"string is an object"


"escape sequences inside strings: \\ \/ \" \n \t"

//Note that \/ escape sequence inside quoted string is not always needed,
//one have to use it only to avoid unwanted commenting when // or /* or */
//sequences appear in the strings. I.e. for example string "up/down" is ok.


//comment

/* multi line
comment */

// /* /* nested comments are not allowed */ */

//comment is NOT an object, unlike in XML, it is ignored by parser.


//If string does not contain spaces ' ', tabs '\t', new lines '\n',
//carriage returns '\r', curly braces '{' and '}', double quotes '"',
//then it does not have to be enclosed in double quotes:

string_without_spaces_does_not_need_to_be_enclosed_in_double_quotes


//Object (which is string) can have children.
//Those are optionally specified in curly braces right after the string:

"some string"{
	//Child objects are specified simply:
	ChildString{
		"Nested child string"
	}

	"another child string"

	AndOneMore_Child
}


//empty strings are allowed, but need to be explicitly specified by two double quotes:

""{
	"child object"{} //empty curly braces are ok
}


//In multi line strings tabs, new line characters, carriage returns are ignored.
//Use escape sequences to place those characters to the string explicitly.
"multiline 
	string"
